version: '2.3'
services:
  redis:
     image: redis:latest
     hostname: redis
     ports:
       - '6379:6379'

  frontend:
    restart: always
    build:
      context: frontend
      dockerfile: Dockerfile
    volumes:
      - './frontend:/frontend'
    container_name: frontend
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development

  rabbit:
    hostname: rabbit
    image: rabbitmq:3-management
    container_name: rabbit
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=pass

  #Flask App Container
  flask:
    build:
      context: app
      dockerfile: style_transfer_pytorch/Dockerfile
    container_name: flask
    image: nvidia/cuda:11.2.0-cudnn8-devel-ubuntu20.04
    runtime: nvidia
    restart: unless-stopped
    tty: true
    command : gunicorn -b 0.0.0.0:5005 -w 3 -t 900 wsgi
    volumes:
      - ./app:/app
    depends_on:
      - rabbit
    links:
      - rabbit
  #worker
  worker:
    build:
      context: app
      dockerfile: style_transfer_pytorch/Dockerfile
    command: celery -A tasks worker --loglevel INFO --autoscale=10,3
    container_name: worker
    links:
      - rabbit
    depends_on:
      - rabbit
    volumes:
      - ./app:/app

  #Nginx Service
  webserver:
    build:
      context: nginx
      dockerfile: Dockerfile
    image: nginx:1.21.4
    container_name: webserver
    restart: unless-stopped
    tty: true
    environment:
      APP_ENV: "dev"
      APP_NAME: "webserver"
      APP_DEBUG: "true"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - flask
